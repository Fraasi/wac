#!/usr/bin/env bash
# shellcheck source=/dev/null disable=
#
# script for querying wolfram-alpha api from command line
#

# if WOLFRAM_APP_ID is empty & ~/.config/wac/config is readable
if [[ -z "$WOLFRAM_APP_ID" && -r "$HOME"/.config/wac/config ]]; then
  source "$HOME"/.config/wac/config
fi

# check for dependencies
dependencies=('curl' 'jq')
for dep in "${dependencies[@]}"; do
  if ! command -v "$dep" >/dev/null 2>&1; then
    printf "%s has a dependency of %s which was not found in path\nexiting..." "$0" "$dep"
    exit 1
  fi
done

# check if running in wsl for start program
if command -v wsl.exe >/dev/null 2>&1; then
  start="explorer.exe"
else
  start="xdg-open"
fi

function usage() {
  printf "
Usage:
  %s [OPTIONS] <your query>

  Options:
  -f    full api mode
  -h    show this help
  -s    spoken mode (default)
  -r    result mode
  -w    query the web interface
  " "$(basename "$0")"
}

function main() {

  local mode="spoken"
  local app_id="$WOLFRAM_APP_ID"
  local base_url="https://api.wolframalpha.com/v2"
  local debug=false

  while getopts "dfhsrw" OPTNAME; do
    case "$OPTNAME" in
    d)
      debug=true
      echo "d: $*"
      ;;
    f)
      mode="query"
      echo "f: $*"
      ;;
    h)
      usage
      exit 0
      ;;
    s)
      mode="spoken"
      ;;
    r)
      mode="result"
      ;;
    w)
      shift
      "$start" "https://www.wolframalpha.com/input?i=$*"
      exit 0
      ;;
    *)
      usage
      exit 1
      ;;
    esac
  done
  shift $((OPTIND - 1))

  local result
  result=$(curl --silent --data "output=json" --data "appid=$app_id" --data-urlencode "input=$*" "$base_url/$mode")
  if [[ "$debug" == true ]]; then
    printf "%s" "$result" >result.json
  else
    printf "%s" "$result"
  fi
}

main "$@"
